// Generated by data binding compiler. Do not edit!
package com.al.astronauts.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.al.astronauts.R;
import com.al.astronauts.viewmodel.SpaceViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentLocationListBinding extends ViewDataBinding {
  @NonNull
  public final RecyclerView astronautsList;

  @NonNull
  public final TextView astronautsTitle;

  @NonNull
  public final Button buttonViewMap;

  @NonNull
  public final TextView distanceText;

  @NonNull
  public final TextView issLocationValue;

  @NonNull
  public final TextView lastLocation;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView userLocationValue;

  @Bindable
  protected SpaceViewModel mSpaceViewModel;

  protected FragmentLocationListBinding(Object _bindingComponent, View _root, int _localFieldCount,
      RecyclerView astronautsList, TextView astronautsTitle, Button buttonViewMap,
      TextView distanceText, TextView issLocationValue, TextView lastLocation,
      ProgressBar progressBar, TextView userLocationValue) {
    super(_bindingComponent, _root, _localFieldCount);
    this.astronautsList = astronautsList;
    this.astronautsTitle = astronautsTitle;
    this.buttonViewMap = buttonViewMap;
    this.distanceText = distanceText;
    this.issLocationValue = issLocationValue;
    this.lastLocation = lastLocation;
    this.progressBar = progressBar;
    this.userLocationValue = userLocationValue;
  }

  public abstract void setSpaceViewModel(@Nullable SpaceViewModel spaceViewModel);

  @Nullable
  public SpaceViewModel getSpaceViewModel() {
    return mSpaceViewModel;
  }

  @NonNull
  public static FragmentLocationListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_location_list, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentLocationListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentLocationListBinding>inflateInternal(inflater, R.layout.fragment_location_list, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentLocationListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_location_list, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentLocationListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentLocationListBinding>inflateInternal(inflater, R.layout.fragment_location_list, null, false, component);
  }

  public static FragmentLocationListBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentLocationListBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentLocationListBinding)bind(component, view, R.layout.fragment_location_list);
  }
}
